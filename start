#!/bin/sh

# Define paths
CERTS_DIR="/home/twins/certs"
SITES_DIR="/home/twins/sites"
CONFIG_FILE="/home/twins/twins_config.yaml"

# Check if the DOMAINS variable is set
if [ -z "$DOMAINS" ]; then
    echo "‚ùå Error: DOMAINS environment variable is not set."
    exit 1
fi

# Convert DOMAINS into an array (comma-separated)
IFS=',' read -r -a DOMAIN_ARRAY <<< "$DOMAINS"

# Check and generate certificates if necessary
echo "üîë Checking SSL certificates..."
for DOMAIN in "${DOMAIN_ARRAY[@]}"; do
    CERT_FILE="$CERTS_DIR/$DOMAIN.crt"
    KEY_FILE="$CERTS_DIR/$DOMAIN.key"
    
    if [ ! -f "$CERT_FILE" ] || [ ! -f "$KEY_FILE" ]; then
        echo "üõ†Ô∏è Generating certificate for $DOMAIN..."
        
        # Create a temporary OpenSSL config file
        TEMP_CONF=$(mktemp)
        cat > "$TEMP_CONF" <<EOL
[dn]
CN=$DOMAIN
[req]
distinguished_name = dn
[EXT]
subjectAltName=DNS:$DOMAIN
keyUsage=digitalSignature
extendedKeyUsage=serverAuth
EOL

        # Generate certificate
        openssl req -x509 -out "$CERT_FILE" -keyout "$KEY_FILE" \
            -newkey rsa:2048 -nodes -sha256 \
            -days 730 \
            -subj "/CN=$DOMAIN" -extensions EXT -config "$TEMP_CONF"

        # Remove temporary file
        rm -f "$TEMP_CONF"

        echo "‚úÖ Certificate created: $CERT_FILE"
    else
        echo "‚úÖ Certificate already exists for $DOMAIN."
    fi
done

# Create the configuration file
echo "üìù Creating configuration file..."
echo "listen: :1965" > "$CONFIG_FILE"
echo "hosts:" >> "$CONFIG_FILE"

for DOMAIN in "${DOMAIN_ARRAY[@]}"; do
    echo "üîß Configuring host: $DOMAIN"
    cat >> "$CONFIG_FILE" <<EOL
  $DOMAIN:
    cert: $CERTS_DIR/$DOMAIN.crt
    key: $CERTS_DIR/$DOMAIN.key
    paths:
      - path: /
        root: $SITES_DIR/$DOMAIN
        list: true
EOL
done

echo "üöÄ Starting the twins server..."
exec twins --config "$CONFIG_FILE"
